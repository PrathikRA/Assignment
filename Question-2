Question 2: Do Django signals run in the same thread as the caller?
Yes, by default Django signals run in the same thread as the caller. 
Execution is sequential and blocking unless the code has been modified to make it run in another thread.

Code Snippet:

import threading
from django.dispatch import Signal

my_signal = Signal()

def signal_handler(sender, **kwargs):
    print(f"Signal handler thread: {threading.current_thread().name}")

my_signal.connect(signal_handler)

def send_signal():
    print(f"Sender thread: {threading.current_thread().name}")
    my_signal.send(sender="sender")

send_signal()

def run_in_new_thread():
    send_signal()

new_thread = threading.Thread(target=run_in_new_thread)
new_thread.start()
new_thread.join()
